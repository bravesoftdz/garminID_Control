unit Unit6;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.Edit, FMX.Controls.Presentation, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.FMXUI.Wait,
  Data.DB, FireDAC.Comp.Client, FireDAC.Phys.MySQL, FireDAC.Phys.MySQLDef,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet, System.ImageList, FMX.ImgList, FMX.Objects, tabbedtemplate, Unit7 ;

type
  TForm6 = class(TForm)
    Panel1: TPanel;
    Button1: TButton;
    Label1: TLabel;
    Label2: TLabel;
    Button2: TButton;
    LoginConnection: TFDConnection;
    FDQuery1: TFDQuery;
    edtUsername: TEdit;
    edtPassword: TEdit;
    PasswordEditButton1: TPasswordEditButton;
    ImageList1: TImageList;
    Label3: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure edtPasswordKeyUp(Sender: TObject; var Key: Word;
      var KeyChar: Char; Shift: TShiftState);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
    procedure bersih;
  public
    { Public declarations }
     class function Execute : boolean;

  end;

var
  Form6: TForm6;
  form7 : TForm7;

implementation
//uses tabbedtemplate, Unit7 ;

{$R *.fmx}

procedure TForm6.bersih;
begin
  edtUsername.Text:='';
  edtPassword.Text:='';
end;

procedure TForm6.Button1Click(Sender: TObject);
var tmpQuery:TFDQuery;
begin
  try
     tmpQuery:= TFDQuery.Create(Self);
     tmpQuery.Connection:= LoginConnection;
     tmpQuery.SQL.Text:= 'select username from users where username="'+edtUsername.Text+'" and password="'+edtPassword.Text+'"';
     tmpQuery.Active:=true;
     tmpQuery.Open();

     if tmpQuery.RecordCount <> 0 then
     begin
       //ShowMessage('you are logged in!');
       //TabbedForm.Show;
       ModalResult := mrOK;
     end
     else
     begin
       //ShowMessage('username or password is wrong!');
       ModalResult := mrAbort;
     end;

  finally
     tmpQuery.Free;
  end;
end;

procedure TForm6.Button2Click(Sender: TObject);

begin
  try
   form7 := TForm7.Create(nil);
   form7.ShowModal;
   form7.edtUsername.SetFocus;

  finally
    form7.Free;
  end;
end;

procedure TForm6.edtPasswordKeyUp(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
begin
  if Key=13 then
  begin
    Button1Click(Self);
  end;
end;

class function TForm6.Execute: boolean;
begin
  with TForm6.Create(nil) do
   try
   Result := ShowModal = mrOk;
   finally
   Free;
   end;
end;

procedure TForm6.FormCreate(Sender: TObject);
var
  oParams: TStringList;
begin
  try
    if FileExists(ExtractFilePath(ParamStr(0)) + 'file.ini' ) then
    begin
      try
        oParams:=Tstringlist.Create;
        oParams.LoadFromFile( ExtractFilePath(ParamStr(0)) + 'file.ini' );
        //oParams.Add('Pooled=True');
        FDManager.AddConnectionDef('garmin_inventory', 'MySQL', oParams);
        LoginConnection.ConnectionDefName:='garmin_inventory';
      finally
        oParams.Free;
      end;
    end;
    LoginConnection.Connected:=true;
  except
    on E:exception do
    ShowMessage(E.ClassName +' has rised exception of '+ E.Message);
  end;


  //Image1.Bitmap.LoadFromFile(ExtractFilePath( ParamStr(0) ) + 'icon\user.png' );

end;

end.
